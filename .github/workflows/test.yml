name: Test and Plan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test_and_plan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Set up Python environment
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Step 3: Install Python dependencies
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install unittest2 boto3

      # Step 4: Run unit tests
      - name: Run Unit Tests
        run: |
          chmod +x scripts/unit_test.sh
          ./scripts/unit_test.sh

      # Step 5: Run end-to-end tests
      - name: Run End-to-End Tests
        run: |
          python -m unittest discover -s tests/e2e -p 'test_*.py'

      # Step 6: Set up Terraform
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      # Step 7: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      # Step 8: Initialize Terraform
      - name: Terraform Init
        working-directory: infra
        run: terraform init

      # Step 9: Run Terraform Plan
      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -out=tfplan.binary

      # Step 10: Show Terraform Plan
      - name: Terraform Plan Output
        working-directory: infra
        run: terraform show -no-color tfplan.binary

      # Step 11: Upload Terraform Plan as Artifact
      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: infra/tfplan.binary
